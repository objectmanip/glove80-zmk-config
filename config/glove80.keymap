/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

// layers

#define DEFAULT 0
#define LOWER 1
#define MAGIC 2

/ {
    behaviors {
        // For the "layer" key, it'd nice to be able to use it as either a shift or a toggle.
        // Configure it as a tap dance, so the first tap (or hold) is a &mo and the second tap is a &to

        layer_td: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mo 1>, <&to 1>;
        };

        tap_layer_hold_mod: tap_layer_hold_mod {
            compatible = "zmk,behavior-hold-tap";
            label = "TAP_LAYER_HOLD_MOD";
            bindings = <&kp>, <&to>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
        };

        rust_el: rust_el {
            compatible = "zmk,behavior-hold-tap";
            label = "RUST_EL";
            bindings = <&kp>, <&rust_endline>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    macros {
        bt_0: bt_profile_macro_0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 0>;
        };

        bt_1: bt_profile_macro_1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 1>;
        };

        bt_2: bt_profile_macro_2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 2>;
        };

        bt_3: bt_profile_macro_3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 3>;
        };

        email: email {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp F &kp L &kp O &kp R &kp I &kp A &kp N &kp E &kp R &kp W &kp I &kp N &kp B &kp L &kp U &kp E &kp M &kp E &kp L &kp AT &kp G &kp M &kp A &kp I &kp L &kp DOT &kp C &kp O &kp M>;
            label = "EMAIL";
        };

        fhmail: fhmail {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp F &kp L &kp O &kp R &kp I &kp A &kp N &kp DOT &kp B &kp L &kp U &kp E &kp M &kp E &kp L &kp AT &kp H &kp MINUS &kp B &kp R &kp S &kp DOT &kp D &kp E>;
            label = "FHMAIL";
        };

        fhaddr: fhaddr {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(F) &kp L &kp O &kp R &kp I &kp A &kp N &kp SPACE &kp LS(B) &kp L &kp M &kp E &kp L &kp COMMA &kp SPACE &kp LS(H) &kp O &kp C &kp H &kp S &kp C &kp H &kp U &kp L &kp E &kp SPACE &kp LS(B) &kp O &kp N &kp N &kp MINUS &kp LS(R) &kp H &kp E &kp I &kp N &kp MINUS &kp LS(S) &kp I &kp E &kp G &kp COMMA &kp SPACE &kp LS(G) &kp R &kp A &kp N &kp T &kp H &kp A &kp M &kp MINUS &kp LS(A) &kp L &kp L &kp E &kp E &kp SPACE &kp N2 &kp N0 &kp COMMA &kp SPACE &kp N5 &kp N3 &kp N7 &kp N5 &kp N7 &kp SPACE &kp LS(S) &kp A &kp N &kp K &kp T &kp SPACE &kp LS(A) &kp U &kp G &kp U &kp S &kp T &kp I &kp N>;
            label = "FHADDR";
        };

        rust_endline: rust_endline {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press>, <&kp END &kp SEMICOLON &kp ENTER>;

            label = "RUST_ENDLINE";
        };
    };

    combos {
        compatible = "zmk,combos";

        rst-l1 {
            bindings = <&to 1>;
            key-positions = <36 37 38>;
            layers = <0>;
        };

        ien-l1 {
            bindings = <&to 1>;
            key-positions = <41 42 43>;
        };

        rft-gaming {
            bindings = <&to 2>;
            key-positions = <38 36 25>;
            layers = <0>;
        };

        tn-sym {
            bindings = <&mo 1>;
            key-positions = <41 38>;
        };

        agm-email {
            bindings = <&email>;
            key-positions = <39 40 35>;
        };

        fhe-fhmail {
            bindings = <&fhmail>;
            key-positions = <25 59 42>;
        };

        fha-fhaddr {
            bindings = <&fhaddr>;
            key-positions = <25 35 59>;
        };

        neovim_nav {
            bindings = <&mo 0>;
            key-positions = <38 37>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        COLEMAKDH {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |  F1   |  F2 |  F3 |  F4  |  F5  |                                                               |  F6   |  F7   |  F8  |   F9  |  F10 |
            // |  =    |  1  |  2  |  3   |  4   |  5   |                                                 |  6   |   7   |   8   |  9   |   0   |   -  |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                                                 |  Y   |   U   |   I   |  O   |   P   |   \  |
            // |  ESC  |  A  |  S  |  D   |  F   |  G   |                                                 |  H   |   J   |   K   |  L   |   ;   |   '  |
            // |   `   |  Z  |  X  |  C   |  V   |  B   | LSHFT | LCTRL | LOWER | | LGUI  | RCTRL | RSHFT |  N   |   M   |   ,   |  .   |   /   | PGUP |
            // | MAGIC | HOME| END | LEFT | RIGHT|      | BSPC  | DEL   | LALT  | | RALT  | RET   | SPACE |      |  UP   | DOWN  |  [   |   ]   | PGDN |

            bindings = <
&kp F1                &kp F2           &kp F3           &kp F4           &kp F5                                                                                                                                                                                                                    &kp F6                   &kp F7               &kp F8            &kp F9               &kp F10
&kp ESCAPE            &mt F1 NUMBER_1  &mt F2 NUMBER_2  &mt F3 NUMBER_3  &mt F4 NUMBER_4         &mt F5 N5                                                                                                                                                                        &mt F6 NUMBER_6  &mt F7 N7                &mt F8 N8            &mt F9 N9         &mt F10 N0           &kp F11
&kp TAB               &kp Q            &kp W            &kp F            &mt LEFT_PARENTHESIS P  &kp B                                                                                                                                                                            &kp J            &mt RIGHT_PARENTHESIS L  &kp U                &kp Y             &kp MINUS            &kp C_VOL_UP
&mt LCTRL SQT         &kp A            &kp R            &kp S            &mt LEFT_BRACKET T      &kp G                                                                                                                                                                            &kp M            &mt RIGHT_BRACKET N      &kp E                &kp I             &kp O                &kp C_PLAY_PAUSE
&mt LEFT_SHIFT EQUAL  &kp Z            &kp X            &kp C            &mt LEFT_BRACE D        &mt EXCLAMATION V  &tap_layer_hold_mod LALT 1  &mt LS(HOME) HOME    &mt LEFT_GUI LG(LS(F1))      &mt LEFT_WIN LS(LG(F1))      &mt LS(END) END   &tap_layer_hold_mod RIGHT_ALT 4  &mt QUESTION K   &mt RIGHT_BRACE H        &mt SEMICOLON COMMA  &mt COLON PERIOD  &mt BACKSLASH SLASH  &kp C_VOL_DN
&kp LC(LA(F13))       &kp HOME         &kp END          &kp LEFT         &kp RIGHT                                  &lt 1 SPACE                 &mt LCTRL BACKSPACE  &rust_el LS(LC(LEFT_ALT)) 0  &rust_el LS(LC(LEFT_ALT)) 0  &mt LCTRL DELETE  &mt LEFT_SHIFT ENTER                              &kp UP                   &kp DOWN             &kp C_PREVIOUS    &kp C_NEXT           &kp PG_DN
            >;
        };

        SYMNUM {
            bindings = <
&none          &none      &none              &none          &none                                                                                                           &none       &none         &none          &none            &none
&trans         &none      &none              &none          &none          &none                                                                                &none       &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &none
&trans         &kp SLASH  &kp ASTERISK       &kp AMPERSAND  &kp RA(GRAVE)  &kp PERCENT                                                                          &kp PLUS    &kp KP_N7   &kp KP_N8     &kp KP_N9      &kp KP_MINUS     &none
&kp LS(SQT)    &kp HASH   &kp LS(NUMBER_4)   &kp RA(N5)     &kp GRAVE      &kp AT_SIGN                                                                          &kp PERIOD  &kp KP_N4   &kp KP_N5     &kp KP_N6      &kp KP_NUMBER_0  &none
&kp LS(EQUAL)  &none      &kp RA(SEMICOLON)  &kp TILDE      &kp CARET      &none        &tap_layer_hold_mod LEFT_ALT 0  &trans  &trans  &trans  &trans  &trans  &kp COMMA   &kp KP_N1   &kp KP_N2     &kp KP_N3      &kp KP_ENTER     &trans
&trans         &none      &none              &none          &none                       &trans                          &trans  &trans  &trans  &trans  &trans              &none       &none         &none          &none            &trans
            >;
        };

        GAMES1 {
            bindings = <
&trans      &trans  &trans          &trans            &trans                                                                             &trans  &trans     &trans   &trans     &trans
&kp ESCAPE  &kp N1  &kp N2          &kp N3            &kp N4      &kp N5                                                         &kp N6  &kp N7  &kp N8     &kp N9   &kp N0     &kp F11
&kp TAB     &kp Q   &kp W           &kp F             &kp P       &kp B                                                          &kp J   &kp L   &kp U      &kp Y    &kp MINUS  &trans
&kp LCTRL   &kp A   &kp R           &kp S             &kp T       &kp G                                                          &kp M   &kp N   &kp E      &kp I    &kp O      &trans
&kp LSHFT   &kp X   &kp Z           &kp C             &kp D       &kp V   &trans    &trans     &trans  &trans  &trans   &trans   &kp K   &kp H   &kp COMMA  &kp DOT  &kp FSLH   &trans
&trans      &trans  &kp K_PREVIOUS  &kp K_PLAY_PAUSE  &kp K_NEXT          &kp BSPC  &kp SPACE  &mo 3   &trans  &kp RET  &kp DEL          &trans  &trans     &trans   &trans     &trans
            >;
        };

        GAMES2 {
            bindings = <
&none  &none      &none    &none      &none                                                            &none  &none  &none  &none  &none
&none  &kp N0     &kp N9   &kp N8     &kp N7  &kp N6                                            &none  &none  &none  &none  &none  &none
&none  &kp MINUS  &kp Y    &kp U      &kp L   &kp J                                             &none  &none  &none  &none  &none  &none
&none  &kp O      &kp I    &kp E      &kp N   &kp M                                             &none  &none  &none  &none  &none  &none
&none  &kp FSLH   &kp DOT  &kp COMMA  &kp H   &kp K   &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none
&none  &none      &none    &none      &none           &none  &none  &none  &none  &none  &none         &none  &none  &none  &none  &none
            >;
        };

        NAVLOCK {
            bindings = <
&bootloader        &bt_0       &bt_1       &bt_2       &bt_3                                                                                                            &none           &none           &none            &none      &none
&ext_power EP_TOG  &bl BL_TOG  &bl BL_DEC  &bl BL_INC  &bl BL_CYCLE  &bl BL_SET 20                                                                   &none              &none           &none           &none            &none      &none
&none              &none       &kp N7      &kp N8      &kp N9        &none                                                                           &kp K_SCROLL_UP    &kp PG_UP       &kp UP_ARROW    &kp PAGE_DOWN    &none      &none
&none              &kp N0      &kp N4      &kp N5      &kp N6        &none                                                                           &kp K_SCROLL_DOWN  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp LCTRL  &none
&none              &none       &kp N1      &kp N3      &kp N2        &none          &out OUT_TOG  &none  &none  &none  &none           &kp LEFT_ALT  &none              &none           &none           &none            &none      &none
&none              &none       &none       &none       &none                        &to 0         &to 2  &none  &none  &kp LEFT_SHIFT  &kp ESCAPE                       &none           &none           &none            &none      &none
            >;
        };
    };
};
