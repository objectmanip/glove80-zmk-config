/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

// layers

#define DEFAULT 0
#define LOWER 1
#define MAGIC 2

/ {
    behaviors {
        // For the "layer" key, it'd nice to be able to use it as either a shift or a toggle.
        // Configure it as a tap dance, so the first tap (or hold) is a &mo and the second tap is a &to

        layer_td: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mo 1>, <&to 1>;
        };
    };

    macros {
        bt_0: bt_profile_macro_0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 0>;
        };

        bt_1: bt_profile_macro_1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 1>;
        };

        bt_2: bt_profile_macro_2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 2>;
        };

        bt_3: bt_profile_macro_3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |  F1   |  F2 |  F3 |  F4  |  F5  |                                                               |  F6   |  F7   |  F8  |   F9  |  F10 |
            // |  =    |  1  |  2  |  3   |  4   |  5   |                                                 |  6   |   7   |   8   |  9   |   0   |   -  |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                                                 |  Y   |   U   |   I   |  O   |   P   |   \  |
            // |  ESC  |  A  |  S  |  D   |  F   |  G   |                                                 |  H   |   J   |   K   |  L   |   ;   |   '  |
            // |   `   |  Z  |  X  |  C   |  V   |  B   | LSHFT | LCTRL | LOWER | | LGUI  | RCTRL | RSHFT |  N   |   M   |   ,   |  .   |   /   | PGUP |
            // | MAGIC | HOME| END | LEFT | RIGHT|      | BSPC  | DEL   | LALT  | | RALT  | RET   | SPACE |      |  UP   | DOWN  |  [   |   ]   | PGDN |

            bindings = <
&kp F1                &kp F2           &kp F3           &kp F4           &kp F5                                                                                                                                                                                          &kp F6                   &kp F7               &kp F8            &kp F9               &kp F10
&kp ESCAPE            &mt F1 NUMBER_1  &mt F2 NUMBER_2  &mt F3 NUMBER_3  &mt F4 NUMBER_4         &mt F5 N5                                                                                                                                              &mt F6 NUMBER_6  &mt F7 N7                &mt F8 N8            &mt F9 N9         &mt F10 N0           &kp F11
&kp TAB               &kp Q            &kp W            &kp F            &mt LEFT_PARENTHESIS P  &kp B                                                                                                                                                  &kp J            &mt RIGHT_PARENTHESIS L  &kp U                &kp Y             &kp MINUS            &kp C_VOL_UP
&mt LCTRL SQT         &kp A            &kp R            &kp S            &mt LEFT_BRACKET T      &kp G                                                                                                                                                  &kp M            &mt RIGHT_BRACKET N      &kp E                &kp I             &kp O                &kp C_PLAY_PAUSE
&mt LEFT_SHIFT EQUAL  &kp Z            &kp X            &kp C            &mt LEFT_BRACE D        &mt EXCLAMATION V  &kp LEFT_ALT         &mt LS(HOME) HOME  &mt LEFT_GUI LG(LS(F1))    &mt LEFT_WIN LS(LG(F1))  &mt LS(END) END       &kp RALT          &mt QUESTION K   &mt RIGHT_BRACE H        &mt SEMICOLON COMMA  &mt COLON PERIOD  &mt BACKSLASH SLASH  &kp C_VOL_DN
&kp LC(LA(F13))       &kp HOME         &kp END          &kp LEFT         &kp RIGHT                                  &mt LCTRL BACKSPACE  &lt 1 SPACE        &mo 1                      &kp LA(LS(RCTRL))        &mt LEFT_SHIFT ENTER  &mt LCTRL DELETE                   &kp UP                   &kp DOWN             &kp C_PREVIOUS    &kp C_NEXT           &kp PG_DN
            >;
        };

        SYMNUM {
            bindings = <
&none          &none      &none              &none          &none                                                                                     &none       &none         &none          &none            &none
&trans         &none      &none              &none          &none          &none                                                          &none       &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &none
&trans         &kp SLASH  &kp ASTERISK       &kp AMPERSAND  &kp RA(GRAVE)  &kp PERCENT                                                    &kp PLUS    &kp KP_N7   &kp KP_N8     &kp KP_N9      &kp KP_MINUS     &none
&kp LS(SQT)    &kp HASH   &kp LS(NUMBER_4)   &kp RA(N5)     &kp GRAVE      &kp AT_SIGN                                                    &kp PERIOD  &kp KP_N4   &kp KP_N5     &kp KP_N6      &kp KP_NUMBER_0  &none
&kp LS(EQUAL)  &none      &kp RA(SEMICOLON)  &kp TILDE      &kp CARET      &none        &trans  &trans  &to 0     &trans  &trans  &trans  &kp COMMA   &kp KP_N1   &kp KP_N2     &kp KP_N3      &kp KP_ENTER     &trans
&trans         &none      &none              &none          &none                       &trans  &trans  &trans    &trans  &trans  &trans              &none       &none         &none          &none            &trans
            >;
        };

        GAMES1 {
            bindings = <
&trans      &trans  &trans          &trans            &trans                                                                               &trans  &trans     &trans   &trans     &trans
&kp ESCAPE  &kp N1  &kp N2          &kp N3            &kp N4      &kp N5                                                           &kp N6  &kp N7  &kp N8     &kp N9   &kp N0     &kp F11
&kp TAB     &kp Q   &kp W           &kp F             &kp P       &kp B                                                            &kp J   &kp L   &kp U      &kp Y    &kp MINUS  &trans
&kp LCTRL   &kp A   &kp R           &kp S             &kp T       &kp G                                                            &kp M   &kp N   &kp E      &kp I    &kp O      &trans
&kp LSHFT   &kp X   &kp Z           &kp C             &kp D       &kp V   &trans    &trans     &trans    &trans  &trans   &trans   &kp K   &kp H   &kp COMMA  &kp DOT  &kp FSLH   &trans
&trans      &trans  &kp K_PREVIOUS  &kp K_PLAY_PAUSE  &kp K_NEXT          &kp BSPC  &kp SPACE  &mo 3     &trans  &kp RET  &kp DEL          &trans  &trans     &trans   &trans     &trans
            >;
        };

        GAMES2 {
            bindings = <
&trans  &trans     &trans   &trans     &trans                                                                    &trans  &trans  &trans  &trans  &trans
&trans  &trans     &trans   &trans     &trans  &trans                                                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp MINUS  &kp Y    &kp U      &kp L   &kp J                                                     &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp O      &kp I    &kp E      &kp N   &kp M                                                     &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp FSLH   &kp DOT  &kp COMMA  &kp H   &kp K   &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans     &trans   &trans     &trans          &trans  &trans  &trans    &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };

        NAVLOCK {
            bindings = <
&bootloader  &none         &none       &none       &none                                                                                                &none           &none           &none            &none      &none
&none        &bt_0         &bt_1       &bt_2       &bt_3          &none                                                              &none              &none           &none           &none            &none      &none
&none        &bl BL_TOG    &bl BL_DEC  &bl BL_INC  &bl BL_SET 20  &none                                                              &kp K_SCROLL_UP    &kp PG_UP       &kp UP_ARROW    &kp PAGE_DOWN    &none      &none
&none        &kp LEFT_GUI  &none       &to 2       &to 0          &none                                                              &kp K_SCROLL_DOWN  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp LCTRL  &none
&none        &none         &none       &none       &none          &none  &none  &none  &none    &none  &none           &kp LEFT_ALT  &none              &none           &none           &none            &none      &none
&none        &none         &none       &none       &none                 &none  &none  &none    &none  &kp LEFT_SHIFT  &kp ESCAPE                       &none           &none           &none            &none      &none
            >;
        };
    };
};
